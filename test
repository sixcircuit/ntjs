#!/usr/bin/env node

const { _ } = require("./lib/common.js");

var cp = require('child_process');
var root = _.path.fun(_.path.normalize(__dirname));
var tamejs = require('.');

var shell = function(command, options){
   try{ cp.execSync(command, _.extend({}, options, { stdio: [0,1,2] })); }
   catch(error){ return(error.status); } // error code 
   return(0);
};

(function main(){

   var files = _.fs.files.sync(root('tests'));
   var args = process.argv.slice(2);

   var whitelist = args

   if(whitelist.length){
      files = _.filter(files, function(file){ 
         var item = _.find(whitelist, function(entry){
            var match = (file.name.indexOf(entry) >= 0)
            return(match);
         });
         return(item !== undefined);
      });
   }

   var run_files = [];

   shell("mkdir " + root("tests") + " 2> /dev/null");

   var total_time = _.time();

   _.each(files, function(file){
      var ext = _.path.extension(file.name);
      if(ext === "tjs"){
         _.p("processing: ", "tests/" + file.name);
         var dest = root("tests", (_.path.extension(file.name, "") + ".test.js"));
         // var parse_time = _.time();
         var gen = tamejs.parse.file({ path: file.path });
         // parse_time("parse time: " + file.name + ": ");
         _.fs.write_file.sync(dest, gen.code);
         run_files.push(dest);
      }else if(ext === "js" && file.name !== "common.js"){
         run_files.push(file.path);
      }
   });

   total_time("parse time");

   run_files = _.unique(run_files);

   if(run_files.length){
      shell(root("./node_modules/dry-test/bin/dry-test") + " " + run_files.join(" "));
   }

})();
