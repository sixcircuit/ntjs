"use strict";

function square(n) {
    if(x === y){ }
    // tame{ blah(defer()); }
    // tame   { blah(defer(var x, y, z)); }
    // atame { blah(defer()); }

    await { 
       blah(1, hello(), defer(var a, b, c), 1);
       blah(1, hello(), defer( var  a, b, c), 2);
       blah(1, hello(), defer( let  a, b, c), 3);
       blah(defer(a, b, c));
    }

    await{
       blah(1, hello(), _.plumb(defer(), callback), 4);
    }

    await{
       blah(1, hello(), _.plumb(defer(a, b, c), callback), 4);
    }

    await{
       blah(1, hello(), _.plumb(defer(var a, b, c), callback), 4);
    }

    await{
       blah(1, hello(), _.plumb(defer(let a, b, c), callback), 4);
    }

    /* illegal expression, can only have variables after a let
    await{
       blah(1, hello(), _.plumb(defer(let a[1], b, c), callback), 4);
    }
    */

    var x = 0;
    while(x < 2){ x++; }
    return n * n;
}
